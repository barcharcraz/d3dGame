project (d3dgame)
cmake_minimum_required(VERSION 2.8)
set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)
find_package(Eigen3 REQUIRED)
include_directories(${EIGEN3_INCLUDE_DIR} ${PROJECT_SOURCE_DIR})

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/output)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/output)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/output)
IF(CMAKE_COMPILER_IS_GNUCXX)
	add_definitions(-std=c++11)
ENDIF(CMAKE_COMPILER_IS_GNUCXX)

#config.h configuration
INCLUDE(CheckIncludeFiles)
CHECK_INCLUDE_FILES(X11/Xlib.h HAS_X11)
CHECK_INCLUDE_FILES(windows.h HAS_WIN32)
CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/config.h.in ${CMAKE_CURRENT_SOURCE_DIR}/config.h)
IF(WIN32)
add_definitions(-DUINCODE -D_UNICODE /W4)
set(CMAKE_EXE_LINKER_FLAGS /ENTRY:"wWinMainCRTStartup")
ENDIF(WIN32)

add_custom_target(Glue SOURCES windowing.h)

add_subdirectory(LibCommon)
add_subdirectory(assets)
add_subdirectory(Utils)
add_subdirectory(LibComponents)
add_subdirectory(CrossplatApp)
add_subdirectory(LibOpenGL)
add_subdirectory(LibInput)
add_subdirectory(LibSystems)
add_subdirectory(LibImage)
IF(WIN32)
add_subdirectory(LibHLSL)
add_subdirectory(HLSLShaders)
add_subdirectory(LibDirect3D)
add_subdirectory(LibDirect2D)
add_subdirectory(LibDXGI)
add_subdirectory(windows)
add_subdirectory(SimpleEditor)
ENDIF(WIN32)
IF(UNIX)
add_subdirectory(LibXWindows)
add_subdirectory(LibGLX)

ENDIF(UNIX)


